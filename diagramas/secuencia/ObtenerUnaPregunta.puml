@startuml

skinparam monochrome true
hide footbox

participant "Test" as actor
participant "diccionarioPreguntas:DiccionarioPreguntas" as diccionario
participant "jsonLoader:JsonLoader" as loader
participant "jsonObject:JsonObject" as jsonObject
participant "factory:PreguntasFactory" as factory
participant "recorredor:RecorredorPreguntas" as recorredor


create loader
actor -> loader: JsonLoader(filePath)
create factory
loader -> factory: PreguntaFactory()
create diccionario
actor -> diccionario: Diccionario()

actor -> diccionario: asignarPreguntasPorTema(jsonLoader)
activate diccionario
loop Para cada pregunta del JsonLoader
diccionario -> loader: loadPregunta(numeroPregunta)
activate loader
loader -> loader: leerAtributos(numeroPregunta)
create jsonObject
loader -> jsonObject: JsonObject()
loader --> loader: jsonObject
loader -> factory: crearPregunta(jsonObject, respuestaCorrecta, opciones)
activate factory
factory --> loader: pregunta
deactivate factory
loader --> diccionario: pregunta
deactivate loader
diccionario -> diccionario: preguntasGuardadas.putIfAbsent(pregunta.getTema(), new ArrayList<>());
diccionario -> diccionario: preguntasGuardadas.get(pregunta.getTema()).add(pregunta);
end
create recorredor
diccionario -> recorredor: Recorredor(preguntasGuardadas)
deactivate diccionario

actor -> diccionario: getPregunta()
activate diccionario
diccionario -> recorredor: obtenerPregunta()
activate recorredor
recorredor --> diccionario: pregunta
deactivate recorredor
diccionario --> actor: pregunta
deactivate diccionario

@enduml
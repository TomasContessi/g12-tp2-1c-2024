
@startuml


'https://plantuml.com/class-diagram

class Jugador {
    - nombre:String
    - exclusividad:Exclusividad
    + Jugador(nombre:String)
    + cambiarRespuesta():void
    +usarMultiplicador(pregunta:Pregunta, multiplicador:Multiplicador)
    + agregarOpcion(pregunta:Pregunta, numeroOpcion:int):void
    + getNombre():String
    + getRespuesta():Respuesta
    + asignarPuntos(puntos:Puntaje):void
    + getPuntos():Puntaje
}

interface Multiplicador {
    + multiplicar(puntaje:Puntaje): Puntaje
}

class Puntaje {
    - valor:int
    + Puntaje(puntaje:int)
    + multiplicarseCon(otroPuntaje:Puntaje):Puntaje
    + sumarseCon(otroPuntaje:Puntaje):Puntaje
    + descontar(otroPuntaje:Puntaje):Puntaje
    + menorOIgualQue(otroPuntaje:Puntaje):boolean
    + mayorIgual(otroPuntaje:Puntaje):boolean
    + valorNumerico():int 
    + equals(Object o):boolean
    + hashCode():int
}

class Respuesta {
        - opciones: ArrayList<Opcion>
        - cantidadDeOpcionesCorrectas: int
        - cantidadDeOpcionesIncorrectas: int

        + Respuesta()
        + Respuesta(opciones: ArrayList<Opcion>)
        + agregarOpcion(opcion: Opcion): void
        + eliminarOpciones(): void
        - otraRespuestaTieneMayorCantidadDeOpciones(otraRespuesta: Respuesta): boolean
        + corregirRespuestaUnica(otraRespuesta: Respuesta): boolean
        + corregirRespuestaSinImportarElOrden(otraRespuesta: Respuesta): boolean
        + corregirImportandoElOrden(otraRespuesta: Respuesta): boolean
        + cantidadDeOpcionesCorrectas(): int
        + cantidadDeOpcionesIncorrectas(): int
    }

Jugador *-- "1..*" Multiplicador
Jugador o-- Puntaje
Jugador o-- Respuesta

@enduml
